// Generated by view binder compiler. Do not edit!
package dev.lucasnlm.antimine.control.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import dev.lucasnlm.antimine.control.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SwitchButtonBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout buttonLayout;

  @NonNull
  public final MaterialCardView card;

  @NonNull
  public final MaterialCardView flagBox;

  @NonNull
  public final MaterialButton flagButton;

  @NonNull
  public final MaterialCardView openBox;

  @NonNull
  public final MaterialButton openButton;

  @NonNull
  public final MaterialCardView questionBox;

  @NonNull
  public final MaterialButton questionButton;

  private SwitchButtonBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout buttonLayout,
      @NonNull MaterialCardView card, @NonNull MaterialCardView flagBox,
      @NonNull MaterialButton flagButton, @NonNull MaterialCardView openBox,
      @NonNull MaterialButton openButton, @NonNull MaterialCardView questionBox,
      @NonNull MaterialButton questionButton) {
    this.rootView = rootView;
    this.buttonLayout = buttonLayout;
    this.card = card;
    this.flagBox = flagBox;
    this.flagButton = flagButton;
    this.openBox = openBox;
    this.openButton = openButton;
    this.questionBox = questionBox;
    this.questionButton = questionButton;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SwitchButtonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SwitchButtonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.switch_button, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SwitchButtonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLayout;
      LinearLayout buttonLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttonLayout == null) {
        break missingId;
      }

      id = R.id.card;
      MaterialCardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.flagBox;
      MaterialCardView flagBox = ViewBindings.findChildViewById(rootView, id);
      if (flagBox == null) {
        break missingId;
      }

      id = R.id.flagButton;
      MaterialButton flagButton = ViewBindings.findChildViewById(rootView, id);
      if (flagButton == null) {
        break missingId;
      }

      id = R.id.openBox;
      MaterialCardView openBox = ViewBindings.findChildViewById(rootView, id);
      if (openBox == null) {
        break missingId;
      }

      id = R.id.openButton;
      MaterialButton openButton = ViewBindings.findChildViewById(rootView, id);
      if (openButton == null) {
        break missingId;
      }

      id = R.id.questionBox;
      MaterialCardView questionBox = ViewBindings.findChildViewById(rootView, id);
      if (questionBox == null) {
        break missingId;
      }

      id = R.id.questionButton;
      MaterialButton questionButton = ViewBindings.findChildViewById(rootView, id);
      if (questionButton == null) {
        break missingId;
      }

      return new SwitchButtonBinding((FrameLayout) rootView, buttonLayout, card, flagBox,
          flagButton, openBox, openButton, questionBox, questionButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
