// Generated by view binder compiler. Do not edit!
package dev.lucasnlm.antimine.control.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import dev.lucasnlm.antimine.control.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewControlItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final LinearLayout firstAction;

  @NonNull
  public final MaterialTextView firstActionName;

  @NonNull
  public final MaterialTextView firstActionResponse;

  @NonNull
  public final LinearLayout secondAction;

  @NonNull
  public final MaterialTextView secondActionName;

  @NonNull
  public final MaterialTextView secondActionResponse;

  private ViewControlItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardView, @NonNull LinearLayout firstAction,
      @NonNull MaterialTextView firstActionName, @NonNull MaterialTextView firstActionResponse,
      @NonNull LinearLayout secondAction, @NonNull MaterialTextView secondActionName,
      @NonNull MaterialTextView secondActionResponse) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.firstAction = firstAction;
    this.firstActionName = firstActionName;
    this.firstActionResponse = firstActionResponse;
    this.secondAction = secondAction;
    this.secondActionName = secondActionName;
    this.secondActionResponse = secondActionResponse;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewControlItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewControlItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_control_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewControlItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      MaterialCardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.firstAction;
      LinearLayout firstAction = ViewBindings.findChildViewById(rootView, id);
      if (firstAction == null) {
        break missingId;
      }

      id = R.id.firstActionName;
      MaterialTextView firstActionName = ViewBindings.findChildViewById(rootView, id);
      if (firstActionName == null) {
        break missingId;
      }

      id = R.id.firstActionResponse;
      MaterialTextView firstActionResponse = ViewBindings.findChildViewById(rootView, id);
      if (firstActionResponse == null) {
        break missingId;
      }

      id = R.id.secondAction;
      LinearLayout secondAction = ViewBindings.findChildViewById(rootView, id);
      if (secondAction == null) {
        break missingId;
      }

      id = R.id.secondActionName;
      MaterialTextView secondActionName = ViewBindings.findChildViewById(rootView, id);
      if (secondActionName == null) {
        break missingId;
      }

      id = R.id.secondActionResponse;
      MaterialTextView secondActionResponse = ViewBindings.findChildViewById(rootView, id);
      if (secondActionResponse == null) {
        break missingId;
      }

      return new ViewControlItemBinding((ConstraintLayout) rootView, cardView, firstAction,
          firstActionName, firstActionResponse, secondAction, secondActionName,
          secondActionResponse);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
