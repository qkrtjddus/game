// Generated by view binder compiler. Do not edit!
package dev.lucasnlm.antimine.themes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import dev.lucasnlm.antimine.themes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewThemeBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final MaterialCardView cardTheme;

  @NonNull
  public final View covered;

  @NonNull
  public final MaterialTextView label;

  @NonNull
  public final View uncovered;

  private ViewThemeBinding(@NonNull FrameLayout rootView, @NonNull MaterialCardView cardTheme,
      @NonNull View covered, @NonNull MaterialTextView label, @NonNull View uncovered) {
    this.rootView = rootView;
    this.cardTheme = cardTheme;
    this.covered = covered;
    this.label = label;
    this.uncovered = uncovered;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewThemeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewThemeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_theme, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewThemeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardTheme;
      MaterialCardView cardTheme = ViewBindings.findChildViewById(rootView, id);
      if (cardTheme == null) {
        break missingId;
      }

      id = R.id.covered;
      View covered = ViewBindings.findChildViewById(rootView, id);
      if (covered == null) {
        break missingId;
      }

      id = R.id.label;
      MaterialTextView label = ViewBindings.findChildViewById(rootView, id);
      if (label == null) {
        break missingId;
      }

      id = R.id.uncovered;
      View uncovered = ViewBindings.findChildViewById(rootView, id);
      if (uncovered == null) {
        break missingId;
      }

      return new ViewThemeBinding((FrameLayout) rootView, cardTheme, covered, label, uncovered);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
